version: 2.1

orbs:
  codecov: codecov/codecov@3.2.2

workflows:
  version: 2
  test:
    jobs:
      - package_cw_utils_build_and_test
      - package_cw_utils_build_minimal
      - package_cw_utils_build_maximal
      - package_controllers
      - package_cw2
      - lint:
          matrix:
            parameters:
              rust-version: ["1.70.0", "1.76.0"]
      - coverage
  nightly:
    triggers:
      - schedule:
          # Built every weekday night
          cron: "0 0 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      # Build with minimal versions of dependencies
      - package_cw_utils_build_minimal
      # Build with maximal versions of dependencies
      - package_cw_utils_build_maximal

jobs:
  package_cw_utils_build_and_test:
    docker:
      - image: rust:1.70.0
    working_directory: ~/project/packages/cw-utils
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown && rustup target list --installed
      - run:
          name: Generate a lockfile
          command: cargo update
      - restore_cache:
          keys:
            - v3-cw-utils-rust:1.70.0-{{ checksum "~/project/Cargo.lock" }}
            - v3-cw-utils-rust:1.70.0-
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Build library for Wasm target (default features)
          command: cargo build --target wasm32-unknown-unknown --locked
      - run:
          name: Build library for Wasm target (all features)
          command: cargo build --target wasm32-unknown-unknown --locked --all-features
      - run:
          name: Run unit tests
          command: cargo test --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: v3-cw-utils-rust:1.70.0-{{ checksum "~/project/Cargo.lock" }}

  package_cw_utils_build_minimal:
    docker:
      - image: rustlang/rust:nightly
    working_directory: ~/project/packages/cw-utils
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - run:
          name: Remove Cargo.lock
          command: rm Cargo.lock
      - restore_cache:
          keys:
            - v3-cw-utils-rust:1.70.0-minimal-{{ checksum "Cargo.toml" }}
            - v3-cw-utils-rust:1.70.0-minimal-
      - run:
          name: Build library for native target
          command: cargo build -Zminimal-versions --all-features
      - run:
          name: Run unit tests
          command: cargo test --workspace -Zminimal-versions --all-features
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: v3-cw-utils-rust:1.70.0-minimal-{{ checksum "Cargo.toml" }}

  package_cw_utils_build_maximal:
    docker:
      - image: rust:1.70.0
    working_directory: ~/project/packages/cw-utils
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - run:
          name: Update Cargo.lock
          command: cargo update
      - restore_cache:
          keys:
            - v3-cw-utils-rust:1.70.0-{{ checksum "~/project/Cargo.lock" }}
            - v3-cw-utils-rust:1.70.0-
      - run:
          name: Build library for native target
          command: cargo build --locked --all-features
      - run:
          name: Run unit tests
          command: cargo test --workspace --locked --all-features
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: v3-cw-utils-rust:1.70.0-{{ checksum "~/project/Cargo.lock" }}

  lint:
    parameters:
      rust-version:
        type: string
    docker:
      - image: rust:<< parameters.rust-version >>
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - run:
          name: Generate a lockfile
          command: cargo update
      - restore_cache:
          keys:
            - v3-lint-rust:<< parameters.rust-version >>-{{ checksum "~/project/Cargo.lock" }}
            - v3-lint-rust:<< parameters.rust-version >>-
      - run:
          name: Add rustfmt component
          command: rustup component add rustfmt
      - run:
          name: Add clippy component
          command: rustup component add clippy
      - run:
          name: Check formatting of workspace
          command: cargo fmt -- --check
      - run:
          name: Clippy linting on workspace
          command: cargo clippy --all-targets -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v3-lint-rust:<< parameters.rust-version >>-{{ checksum "~/project/Cargo.lock" }}

  coverage:
    # https://circleci.com/developer/images?imageType=machine
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - run:
          name: Run tests with coverage
          command: |
            mkdir -p cov
            docker run --security-opt seccomp=unconfined -v "${PWD}:/volume" xd009642/tarpaulin \
              sh -c "cargo tarpaulin --workspace --skip-clean --frozen --out xml --output-dir cov"
      - codecov/upload:
          file: cov/cobertura.xml

  package_cw2:
    docker:
      - image: rust:1.70.0
    working_directory: ~/project/packages/cw2
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - v3-cw2-rust:1.70.0-{{ checksum "~/project/Cargo.lock" }}
            - v3-cw2-rust:1.70.0-
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      # note: there are no schemas to generate
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: v3-cw2-rust:1.70.0-{{ checksum "~/project/Cargo.lock" }}

  package_controllers:
    docker:
      - image: rust:1.70.0
    working_directory: ~/project/packages/controllers
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - v3-controllers-rust:1.70.0-{{ checksum "~/project/Cargo.lock" }}
            - v3-controllers-rust:1.70.0-
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: v3-controllers-rust:1.70.0-{{ checksum "~/project/Cargo.lock" }}
